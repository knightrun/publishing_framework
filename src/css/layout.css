.header h2 {
	font-size: 1vw;
	font-weight: 400;
	color: #fff;
	background-color: #343a40;
	padding-left: 1vw;
	padding-righte: 1vw;
	padding-top: 1vw;
	padding-bottom: 1vw;
}

@media all and (min-width: 1024px) {
	.header h2 {
		font-size: 32px;
		font-weight: 500;
		padding: 20px;
	}
}

#main {
	padding-left: 1vw;
	padding-righte: 1vw;
	padding-top: 1vw;
	padding-bottom: 1vw;
}

@media all and (min-width: 1024px) {
	#main {
		padding: 20px;
	}
}

.footer {
	color: #fff;
	background-color: #222;
	padding-left: 1vw;
	padding-righte: 1vw;
	padding-top: 1vw;
	padding-bottom: 1vw;
}

@media all and (min-width: 1024px) {
	.footer {
		padding: 20px;
	}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

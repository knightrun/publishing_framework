.header h2 {
	font-size: 6.67vw;
	font-weight: 400;
	color: #fff;
	background-color: #343a40;
	padding-left: 2.78vw;
	padding-righte: 2.78vw;
	padding-top: 2.78vw;
	padding-bottom: 2.78vw;
}

@media all and (min-width: 1024px) {
	.header h2 {
		font-size: 32px;
		font-weight: 500;
		padding: 20px;
	}
}

#main {
	padding-left: 2.78vw;
	padding-righte: 2.78vw;
	padding-top: 2.78vw;
	padding-bottom: 2.78vw;
}

@media all and (min-width: 1024px) {
	#main {
		padding: 20px;
	}
}

.footer {
	color: #fff;
	background-color: #222;
	padding-left: 2.78vw;
	padding-righte: 2.78vw;
	padding-top: 2.78vw;
	padding-bottom: 2.78vw;
}

@media all and (min-width: 1024px) {
	.footer {
		padding: 20px;
	}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

@font-face {
	font-family: "NotoSansKR";
	src: url("/dependency/fonts/NotoSansKR-Regular.woff") format("woff"), url("/dependency/fonts/NotoSansKR-Regular.woff2") format("woff2");
	font-weight: 400;
}

@font-face {
	font-family: "NotoSansKR";
	src: url("/dependency/fonts/NotoSansKR-Bold.woff") format("woff"), url("/dependency/fonts/NotoSansKR-Bold.woff2") format("woff2");
	font-weight: 500;
}

* {
	word-break: keep-all;
	word-wrap: break-word;
	font-family: "NotoSansKR", "Malgun Gothic", sans-serif;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	-webkit-font-smoothing: antialiased;
}

html, body, div, h1, h2, h3, h4, h5, h6, ul, ol, li, dl, dt, dd, p, form, fieldset, input, table, tr, th, td, button, textarea, select {
	margin: 0;
	padding: 0;
}

body {
	margin: 0;
	padding: 0;
	font-family: "NotoSansKR", "Malgun Gothic", sans-serif;
	font-size: 16px;
	line-height: 1.2;
	color: #222;
	letter-spacing: 0;
	-ms-text-size-adjust: 100%;
	-moz-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
}

@media all and (min-width: 1024px) {
	body {
		font-size: 18px;
	}
}

h1, h2, h3, h4, h5, h6 {
	font-size: 100%;
	font-weight: normal;
}

img {
	border: 0;
	vertical-align: top;
}

hr {
	display: none;
}

ul, ol, dl, dt, dd, li {
	padding: 0;
	margin: 0;
	list-style: none;
}

table, th, td {
	border-collapse: collapse;
	border-spacing: 0;
	font-weight: normal;
}

caption {
	padding: 0;
}

fieldset, blockquote, iframe, button {
	border: none;
}

em, u, cite {
	font-style: normal;
}

a {
	color: #222;
	text-decoration: none;
}

input {
	font-family: "NotoSansKR", "Malgun Gothic", sans-serif;
}

label {
	font-weight: normal;
	margin: 0;
}

strong {
	font-weight: normal;
}

button {
	background: transparent;
	cursor: pointer;
	vertical-align: middle;
	font-family: "NotoSansKR", "Malgun Gothic", sans-serif;
	font-size: 16px;
	line-height: 1.2;
	color: #222;
	letter-spacing: 0;
	-webkit-text-size-adjust: none;
	outline: none;
}

@media all and (min-width: 721px) {
	button {
		font-size: 18px;
	}
}

@media all and (min-width: 721px) {
	button {
		font-size: 18px;
	}
}

button, input[type="submit"], input[type="button"], input[type="reset"] {
	cursor: pointer;
	-webkit-appearance: none;
}

section, nav, article, aside, header, footer, main {
	display: block;
}

input[type="date"]::-webkit-calendar-picker-indicator,
input[type="date"]::-webkit-inner-spin-button {
	display: none;
}

::-webkit-input-placeholder {
	color: #aaa;
}

::-moz-placeholder {
	color: #aaa;
}

:-ms-input-placeholder {
	color: #aaa;
}

:-moz-placeholder {
	color: #aaa;
}

::-ms-clear,
::-ms-reveal {
	display: none;
}

input, select, textarea, button {
	border: none;
	font-size: 16px;
}

@media all and (min-width: 721px) {
	input, select, textarea, button {
		font-size: 18px;
	}
}

figure, figcaption {
	margin: 0;
	padding: 0;
	border: 0;
	font: inherit;
	vertical-align: baseline;
	outline: none;
}

.skip {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	z-index: 2000;
}

.skip a {
	display: block;
	width: 0;
	height: 0;
	font-size: 0;
}

.skip a:hover,
.skip a:focus,
.skip a:active {
	-webkit-box-sizing: content-box;
	-moz-box-sizing: content-box;
	box-sizing: content-box;
	display: block;
	padding: 9px 0;
	height: 16px;
	width: 100%;
	text-align: center;
	font-size: 18px;
	color: #fff;
	background: #eee;
}

.float--left {
	float: left;
}

.float--right {
	float: right;
}

.text-align--left {
	text-align: left;
}

.text-align--right {
	text-align: right;
}

.text-align--center {
	text-align: center;
}

.screen--out {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	border: 0;
	clip: rect(0 0 0 0);
	overflow: hidden;
}

span.mblock {
	display: block;
}

@media all and (min-width: 1024px) {
	span.mblock {
		display: inline-block;
	}
}

span.pcblock {
	display: inline;
}

@media all and (min-width: 1024px) {
	span.pcblock {
		display: block;
	}
}

span.block {
	display: block;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
